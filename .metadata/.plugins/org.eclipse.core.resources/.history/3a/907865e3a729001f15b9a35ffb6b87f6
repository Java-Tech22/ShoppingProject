package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.Customer;
import com.example.demo.model.Product;
import com.example.demo.service.CustomerService;
import com.example.demo.service.ProductService;

@RestController
public class ShoppingController {
	
	@Autowired
	ProductService productService;
	
	@Autowired
	CustomerService customerService;

	
	public ResponseEntity<List<Product>> getProducts() {
		return new ResponseEntity<>(productService.getProducts(),HttpStatus.OK);
		
	}
	
	@GetMapping("/customers")
	public ResponseEntity<List<Customer>> getCustomers() {
		return new ResponseEntity<>(customerService.findAllCustomer(),HttpStatus.OK);
		
	}
	
	@PostMapping("/customer")
	public ResponseEntity<Customer> saveCustomer(@RequestBody Customer customer) {
		return new ResponseEntity<>(customerService.saveCustomer(customer),HttpStatus.CREATED);
		
	}
	

	@PostMapping("/product")
	public ResponseEntity<Product> saveProduct(@RequestBody Product product) {
		return new ResponseEntity<>(productService.saveProduct(product), HttpStatus.OK);
		
	}
	
	
	@GetMapping("/product/{id}")
	public ResponseEntity<Product> getProductById(@PathVariable int id) {
		return new ResponseEntity<>(productService.findProductById(id), HttpStatus.OK);;
		
	}
	
	@GetMapping("/customer/{id}")
	public ResponseEntity<Customer> getCustomerById(@PathVariable int id) {
		return customerService.findCustomerById(id);
		
	}

	
	  @GetMapping("/customers/{name}") 
	  public ResponseEntity<List<Customer>> getCustomerByLastName(@PathVariable String name) { 
		  return customerService.findCustomerByLastName(name);
	  }
	 
	
	@DeleteMapping("/product/{id}")
	public ResponseEntity<String> deleteProductById(@PathVariable int id) {
		Product product=productService.findProductById(id);
		
		if(product !=null) {
			productService.deleteProductById(id);
			return "Product has been deleted";
		}else {
			return "Product not found ";
		}
			
	}
	

	@DeleteMapping("/customer/{id}")
	public ResponseEntity<String> deleteCustomerById(@PathVariable int id) {
		
	}
	

	/*
	 * @GetMapping("/customer") 
	 * public List<Customer> getCustomerByFirstName(@RequestParam("firstName") String firstame) { 
	 * 	return customerService.findCustomerByFirstName(firstame);
	 * 
	 * }
	 */
	
	
	
	
}
